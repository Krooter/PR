{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/chat/chat.module.ts","webpack:///src/app/chat/dialog-user/dialog-user-type.ts","webpack:///src/app/chat/dialog-user/dialog-user.component.ts","webpack:///src/app/chat/dialog-user/dialog-user.component.html","webpack:///src/app/chat/shared/model/action.ts","webpack:///src/app/chat/shared/model/event.ts","webpack:///src/app/chat/shared/services/socket.service.ts","webpack:///src/app/chat/shared/services/store-user.service.ts","webpack:///src/app/shared/material/material.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","translate","setDefaultLang","use","language","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","loader","provide","useFactory","deps","declarations","providers","bootstrap","AVATAR_URL","ChatComponent","socketService","storedUser","dialog","action","messages","defaultDialogUserParams","disableClose","data","title","title_pt","dialogType","NEW","initModel","setTimeout","openUserPopup","matListItems","changes","subscribe","elements","scrollToBottom","matList","nativeElement","scrollTop","scrollHeight","err","randomId","getRandomId","user","avatar","initSocket","ioConnection","onMessage","message","push","onEvent","CONNECT","console","log","DISCONNECT","Math","floor","random","username","name","EDIT","params","dialogRef","open","afterClosed","paramsDialog","storedUserName","getStoredUser","storeUser","initIoConnection","sendNotification","JOINED","RENAME","send","from","content","messageContent","previousUsername","onClickUserInfo","sendMessage","read","ChatModule","entryComponents","DialogUserType","DialogUserComponent","usernameFormControl","required","undefined","setValue","close","value","onSave","Action","Event","SERVER_URL","SocketService","socket","emit","observer","on","next","event","StoreUserService","sessionStorage","getItem","userName","setItem","providedIn","MaterialModule","SharedModule","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: ChatComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit(): void {\n    this.translate.use('en');\n  }\n\n  private initModel(): void {\n  }\n\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n  }\n\n  switchLanguage(language: string) {\n    this.translate.use(language);\n  }\n}\n","<mat-sidenav-container fullscreen>\n  <div>\n    <mat-toolbar color=\"primary\">\n      <span>Network Programing Chat</span>\n    </mat-toolbar>\n\n    <div class=\"app-content\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</mat-sidenav-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChatModule } from './chat/chat.module';\nimport { SharedModule } from './shared/shared.module';\n\n\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { MatMenuModule } from '@angular/material/menu';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ChatModule,\n    SharedModule,\n    HttpClientModule,\n    MatMenuModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChildren, ViewChild, AfterViewInit, QueryList, ElementRef } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatList, MatListItem } from '@angular/material/list';\n\nimport { Action } from './shared/model/action';\nimport { Event } from './shared/model/event';\nimport { Message } from './shared/model/message';\nimport { User } from './shared/model/user';\nimport { SocketService } from './shared/services/socket.service';\nimport { DialogUserComponent } from './dialog-user/dialog-user.component';\nimport { DialogUserType } from './dialog-user/dialog-user-type';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StoreUserService } from './shared/services/store-user.service';\n\n\nconst AVATAR_URL = 'https://randomuser.me/api/portraits/men';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit, AfterViewInit {\n  action = Action;\n  user: User;\n  messages: Message[] = [];\n  messageContent: string;\n  ioConnection: any;\n  storedUserName: string;\n  dialogRef: MatDialogRef<DialogUserComponent> | null;\n  defaultDialogUserParams: any = {\n    disableClose: true,\n    data: {\n      title: 'Welcome',\n      title_pt: 'Bem-vindo',\n      dialogType: DialogUserType.NEW\n    }\n  };\n\n  @ViewChild(MatList, { read: ElementRef, static: true }) matList: ElementRef;\n  @ViewChildren(MatListItem, { read: ElementRef }) matListItems: QueryList<MatListItem>;\n\n  constructor(private socketService: SocketService,\n    private storedUser: StoreUserService,\n    public dialog: MatDialog, private translate: TranslateService) {\n    translate.setDefaultLang('en');\n  }\n\n  ngOnInit(): void {\n    this.initModel();\n    setTimeout(() => {\n      this.openUserPopup(this.defaultDialogUserParams);\n    }, 0);\n  }\n\n  ngAfterViewInit(): void {\n    this.matListItems.changes.subscribe(elements => {\n      this.scrollToBottom();\n    });\n  }\n\n  private scrollToBottom(): void {\n    try {\n      this.matList.nativeElement.scrollTop = this.matList.nativeElement.scrollHeight;\n    } catch (err) {\n    }\n  }\n\n  private initModel(): void {\n    const randomId = this.getRandomId();\n    this.user = {\n      id: randomId,\n      avatar: `${AVATAR_URL}/${randomId}.jpg`\n    };\n  }\n\n  private initIoConnection(): void {\n    this.socketService.initSocket();\n\n    this.ioConnection = this.socketService.onMessage()\n      .subscribe((message: Message) => {\n        this.messages.push(message);\n      });\n\n\n    this.socketService.onEvent(Event.CONNECT)\n      .subscribe(() => {\n        console.log('connected');\n      });\n\n    this.socketService.onEvent(Event.DISCONNECT)\n      .subscribe(() => {\n        console.log('disconnected');\n      });\n  }\n\n  private getRandomId(): number {\n    return Math.floor(Math.random() * (100)) + 1;\n  }\n\n  public onClickUserInfo() {\n    this.openUserPopup({\n      data: {\n        username: this.user.name,\n        title: 'Edit Details',\n        title_pt: 'Alterar',\n        dialogType: DialogUserType.EDIT\n      }\n    });\n  }\n\n  private openUserPopup(params): void {\n    this.dialogRef = this.dialog.open(DialogUserComponent, params);\n    this.dialogRef.afterClosed().subscribe(paramsDialog => {\n      if (!paramsDialog) {\n        return;\n      }\n      this.storedUserName = this.storedUser.getStoredUser();\n\n      this.user.name = paramsDialog.username;\n\n      if (paramsDialog.dialogType === DialogUserType.NEW) {\n        this.storedUser.storeUser(this.user.name);\n        this.initIoConnection();\n        this.sendNotification(paramsDialog, Action.JOINED);\n      } else if (paramsDialog.dialogType === DialogUserType.EDIT) {\n        this.storedUser.storeUser(this.user.name);\n        this.sendNotification(paramsDialog, Action.RENAME);\n      }\n    });\n  }\n\n  public sendMessage(message: string): void {\n    if (!message) {\n      return;\n    }\n\n    this.socketService.send({\n      from: this.user,\n      content: message\n    });\n    this.messageContent = null;\n  }\n\n  public sendNotification(params: any, action: Action): void {\n    let message: Message;\n\n    if (action === Action.JOINED) {\n      message = {\n        from: this.user,\n        action\n      };\n    } else if (action === Action.RENAME) {\n      message = {\n        action,\n        content: {\n          username: this.user.name,\n          previousUsername: params.previousUsername\n        }\n      };\n    }\n\n    this.socketService.send(message);\n  }\n\n  switchLanguage(language: string) {\n    this.translate.use(language);\n  }\n\n}\n","<button mat-fab (click)=\"onClickUserInfo()\">\n  <mat-icon>person</mat-icon>\n</button>\n<div class=\"chat-container\">\n  <mat-card class=\"main-card\">\n    <mat-list class=\"chat-list\">\n      <mat-list-item *ngFor=\"let message of messages\" [ngClass]=\"[(message.action === undefined && message.from.id === user.id)? 'chat-list-item': '']\">\n        <img mat-list-avatar *ngIf=\"message.action === undefined\" [src]=\"message.from.avatar\">\n        <h4 mat-line *ngIf=\"message.action === undefined\">\n          <b>{{message.from.name}}</b>\n        </h4>\n        <p mat-line *ngIf=\"message.action === undefined\">\n          <span> {{message.content}} </span>\n        </p>\n        <p mat-line *ngIf=\"message.action === action.JOINED\" class=\"chat-notification\">\n          <span translate> <b>{{message.from.name}}</b> joined to the conversation. </span>\n        </p>\n        <p mat-line *ngIf=\"message.action === action.RENAME\" class=\"chat-notification\">\n          <span translate> <b>{{message.content.previousUsername}}</b> is now <b>{{message.content.username}}</b> </span>\n        </p>\n      </mat-list-item>\n    </mat-list>\n    <div class=\"chat-footer-container\">\n      <mat-icon>message</mat-icon>\n      <mat-form-field class=\"chat-input\">\n        <input matInput\n               #inputMessage\n               maxlength=\"140\"\n               placeholder=\"{{'Type your message' | translate}}\"\n               [(ngModel)]=\"messageContent\"\n               (keyup.enter)=\"sendMessage(messageContent)\">\n        <mat-hint align=\"end\">{{inputMessage.value.length}}/140</mat-hint>\n      </mat-form-field>\n    </div>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../shared/material/material.module';\n\nimport { ChatComponent } from './chat.component';\nimport { SocketService } from './shared/services/socket.service';\nimport { DialogUserComponent } from './dialog-user/dialog-user.component';\nimport { StoreUserService } from './shared/services/store-user.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  declarations: [ChatComponent, DialogUserComponent],\n  providers: [SocketService,StoreUserService],\n  entryComponents: [DialogUserComponent]\n})\nexport class ChatModule { }\n","export enum DialogUserType {\n    NEW,\n    EDIT\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { StoreUserService } from '../shared/services/store-user.service';\n\n@Component({\n  selector: 'app-dialog-user',\n  templateUrl: './dialog-user.component.html',\n  styleUrls: ['./dialog-user.component.css']\n})\nexport class DialogUserComponent implements OnInit {\n  usernameFormControl = new FormControl('', [Validators.required]);\n  previousUsername: string;\n\n  constructor(public dialogRef: MatDialogRef<DialogUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public params: any,\n    private translate: TranslateService,\n    private storedUser: StoreUserService) {\n    this.previousUsername = storedUser.getStoredUser() ? storedUser.getStoredUser() : (params.username ? params.username : undefined);\n    this.usernameFormControl.setValue(storedUser.getStoredUser() ? storedUser.getStoredUser() : (params.username ? params.username : \"\"));\n    translate.setDefaultLang('en');\n  }\n\n  ngOnInit() {\n  }\n\n  public onSave(): void {\n    this.dialogRef.close({\n      username: this.usernameFormControl.value,\n      dialogType: this.params.dialogType,\n      previousUsername: this.previousUsername\n    });\n  }\n\n  switchLanguage(language: string) {\n    this.translate.use(language);\n  }\n\n}\n","<div class=\"row\">\n<h2 class=\"dialog-title\" mat-dialog-title>{{ 'Dialog Title' | translate:params }}</h2>\n</div>\n\n<mat-dialog-content class=\"dialog-content\">\n  <mat-form-field>\n    <input matInput name=\"username\" placeholder=\"{{'Username' | translate}}\"\n          (keyup.enter)=\"onSave()\" [formControl]=\"usernameFormControl\" required>\n    <mat-error translate>FieldRequired</mat-error>\n    <mat-hint translate>Please type your username</mat-hint>\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions *ngIf=\"params?.typeDialog === 'new-user'\" [attr.align]=\"'end'\">\n  <button mat-raised-button color=\"primary\" mat-dialog-close (click)=\"onSave()\" [disabled]=\"usernameFormControl.hasError('required')\">Chat!</button>\n</mat-dialog-actions>\n\n<mat-dialog-actions *ngIf=\"params?.typeDialog === 'edit-user'\" [attr.align]=\"'end'\">\n  <button mat-button mat-dialog-close color=\"secondary\">Close</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close (click)=\"onSave()\">Save</button>\n</mat-dialog-actions>\n","export enum Action {\n    JOINED,\n    LEFT,\n    RENAME\n}\n","export enum Event {\n    CONNECT = 'connect',\n    DISCONNECT = 'disconnect'\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs';\nimport { Message } from '../model/message';\nimport { Event } from '../model/event';\nimport * as socketIo from 'socket.io-client';\n\nconst SERVER_URL = 'http://localhost:8080';\n\n@Injectable()\nexport class SocketService {\n    private socket;\n\n    public initSocket(): void {\n        this.socket = socketIo(SERVER_URL);\n    }\n\n    public send(message: Message): void {\n        this.socket.emit('message', message);\n    }\n\n    public onMessage(): Observable<Message> {\n        return new Observable<Message>(observer => {\n            this.socket.on('message', (data: Message) => observer.next(data));\n        });\n    }\n\n    public onEvent(event: Event): Observable<any> {\n        return new Observable<Event>(observer => {\n            this.socket.on(event, () => observer.next());\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreUserService {\n\n  constructor() { }\n\n  public getStoredUser() {\n    let storedUser = sessionStorage.getItem(\"userName\");\n    return storedUser ? storedUser : \"\";\n  }\n\n  public storeUser(userName) {\n    sessionStorage.setItem(\"userName\", userName);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    TranslateModule,\n    MatMenuModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    TranslateModule,\n    MatMenuModule\n  ],\n  declarations: [],\n  providers: [\n    MatDialog\n  ]\n})\nexport class MaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    TranslateModule\n  ],\n  exports: [\n    MaterialModule,\n    TranslateModule\n  ],\n  declarations: []\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}